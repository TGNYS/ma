local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- 优化：缓存 RemoteEvent 避免重复查找
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local BladeBallRemote = ReplicatedStorage:WaitForChild("BladeBallRemote") -- 确保名称正确

-- 优化：调整参数
local SWING_DISTANCE = 15 -- 触发挥刀的距离
local SWING_COOLDOWN = 0.3 -- 挥刀冷却时间（秒）
local BALL_NAMES = {"BladeBall", "Ball", "TargetBall"} -- 可能的球名称（根据游戏调整）
local MAX_BALL_SPEED = 100 -- 球的最大速度（防误判）

local lastSwingTime = 0
local lastBallPosition = nil
local lastBallCheckTime = 0

-- 优化：使用表快速查找球名称
local validBallNames = {}
for _, name in ipairs(BALL_NAMES) do
    validBallNames[name] = true
end

-- 优化：减少 GC，复用变量
local function findNearestBall()
    local nearestBall, nearestDistance = nil, math.huge
    
    for _, instance in ipairs(workspace:GetChildren()) do
        if validBallNames[instance.Name] and instance:IsA("BasePart") then
            local distance = (HumanoidRootPart.Position - instance.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance = distance
                nearestBall = instance
            end
        end
    end
    
    return nearestBall, nearestDistance
end

-- 优化：预测球是否朝玩家飞来
local function isBallApproaching(ball)
    if not lastBallPosition or tick() - lastBallCheckTime > 0.5 then
        lastBallPosition = ball.Position
        lastBallCheckTime = tick()
        return false
    end

    local velocity = (ball.Position - lastBallPosition) / (tick() - lastBallCheckTime)
    lastBallPosition = ball.Position
    lastBallCheckTime = tick()

    -- 如果球速过快或方向不对，不挥刀
    if velocity.Magnitude > MAX_BALL_SPEED then
        return false
    end

    local directionToPlayer = (HumanoidRootPart.Position - ball.Position).Unit
    return velocity.Unit:Dot(directionToPlayer) > 0.5 -- 球朝玩家方向移动
end

-- 优化：使用 Heartbeat 代替 while true 减少延迟
RunService.Heartbeat:Connect(function()
    local now = tick()
    if now - lastSwingTime < SWING_COOLDOWN then
        return
    end

    local ball, distance = findNearestBall()
    if ball and distance < SWING_DISTANCE and isBallApproaching(ball) then
        BladeBallRemote:FireServer("Swing")
        lastSwingTime = now
    end
end)